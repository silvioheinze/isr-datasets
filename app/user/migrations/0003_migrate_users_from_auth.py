# Generated by Django 5.2 on 2025-08-30 19:08

from django.db import migrations


def migrate_users_from_auth(apps, schema_editor):
    """Migrate users from auth_user table to user_customuser table"""
    from django.db import connection
    
    cursor = connection.cursor()
    
    # Check if auth_user table exists
    cursor.execute("""
        SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = 'auth_user'
        );
    """)
    
    table_exists = cursor.fetchone()[0]
    
    if not table_exists:
        print("auth_user table does not exist, skipping migration")
        return
    
    # Get users from auth_user table
    cursor.execute("""
        SELECT id, password, last_login, is_superuser, username, first_name, 
               last_name, email, is_staff, is_active, date_joined
        FROM auth_user
    """)
    
    auth_users = cursor.fetchall()
    
    # Insert users into user_customuser table
    for user_data in auth_users:
        cursor.execute("""
            INSERT INTO user_customuser 
            (id, password, last_login, is_superuser, username, first_name, 
             last_name, email, is_staff, is_active, date_joined)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            ON CONFLICT (id) DO NOTHING
        """, user_data)


def reverse_migrate_users(apps, schema_editor):
    """Reverse migration - remove users from user_customuser table"""
    from django.db import connection
    
    cursor = connection.cursor()
    cursor.execute("DELETE FROM user_customuser")


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0002_role_alter_customuser_options_customuser_role'),
    ]

    operations = [
        migrations.RunPython(migrate_users_from_auth, reverse_migrate_users),
    ]
