# Generated by Django 5.2.6 on 2025-09-18 17:25

from django.db import migrations, models
import django.db.models.deletion


def update_foreign_keys_to_uuid(apps, schema_editor):
    """Update all foreign key relationships to use UUID instead of integer ID"""
    Dataset = apps.get_model('datasets', 'Dataset')
    DatasetVersion = apps.get_model('datasets', 'DatasetVersion')
    DatasetDownload = apps.get_model('datasets', 'DatasetDownload')
    Comment = apps.get_model('datasets', 'Comment')
    
    # Create mapping of old integer IDs to UUIDs
    id_to_uuid = {}
    for dataset in Dataset.objects.all():
        id_to_uuid[dataset.id] = dataset.uuid
    
    # Update DatasetVersion foreign keys
    for version in DatasetVersion.objects.all():
        if version.dataset_id in id_to_uuid:
            version.dataset_uuid = id_to_uuid[version.dataset_id]
            version.save(update_fields=['dataset_uuid'])
    
    # Update DatasetDownload foreign keys
    for download in DatasetDownload.objects.all():
        if download.dataset_id in id_to_uuid:
            download.dataset_uuid = id_to_uuid[download.dataset_id]
            download.save(update_fields=['dataset_uuid'])
    
    # Update Comment foreign keys
    for comment in Comment.objects.all():
        if comment.dataset_id in id_to_uuid:
            comment.dataset_uuid = id_to_uuid[comment.dataset_id]
            comment.save(update_fields=['dataset_uuid'])


def reverse_update_foreign_keys(apps, schema_editor):
    """Reverse operation - this is complex and may not be fully reversible"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0017_add_uuid_field_to_dataset'),
    ]

    operations = [
        # Step 1: Add temporary UUID foreign key fields
        migrations.AddField(
            model_name='datasetversion',
            name='dataset_uuid',
            field=models.UUIDField(null=True, blank=True),
        ),
        
        migrations.AddField(
            model_name='datasetdownload',
            name='dataset_uuid',
            field=models.UUIDField(null=True, blank=True),
        ),
        
        migrations.AddField(
            model_name='comment',
            name='dataset_uuid',
            field=models.UUIDField(null=True, blank=True),
        ),
        
        # Step 2: Populate the UUID foreign key fields
        migrations.RunPython(
            update_foreign_keys_to_uuid,
            reverse_update_foreign_keys,
        ),
        
        # Step 3: Remove old integer foreign key fields
        migrations.RemoveField(
            model_name='datasetversion',
            name='dataset',
        ),
        
        migrations.RemoveField(
            model_name='datasetdownload',
            name='dataset',
        ),
        
        migrations.RemoveField(
            model_name='comment',
            name='dataset',
        ),
        
        # Step 4: Rename UUID fields to be the main foreign key fields
        migrations.RenameField(
            model_name='datasetversion',
            old_name='dataset_uuid',
            new_name='dataset',
        ),
        
        migrations.RenameField(
            model_name='datasetdownload',
            old_name='dataset_uuid',
            new_name='dataset',
        ),
        
        migrations.RenameField(
            model_name='comment',
            old_name='dataset_uuid',
            new_name='dataset',
        ),
        
        # Step 5: Update foreign key field definitions to use UUID
        migrations.AlterField(
            model_name='datasetversion',
            name='dataset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='versions',
                to='datasets.dataset',
                to_field='uuid'
            ),
        ),
        
        migrations.AlterField(
            model_name='datasetdownload',
            name='dataset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='downloads',
                to='datasets.dataset',
                to_field='uuid'
            ),
        ),
        
        migrations.AlterField(
            model_name='comment',
            name='dataset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='comments',
                to='datasets.dataset',
                to_field='uuid',
                verbose_name='Dataset'
            ),
        ),
    ]
