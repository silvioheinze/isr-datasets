# Generated by Django 5.2.6 on 2025-09-16 13:31

from django.db import migrations


def populate_publishing_authorities(apps, schema_editor):
    """Populate PublishingAuthority model with existing data"""
    PublishingAuthority = apps.get_model('datasets', 'PublishingAuthority')
    Dataset = apps.get_model('datasets', 'Dataset')
    
    # Get unique publishing authority names from existing datasets
    existing_authorities = set()
    for dataset in Dataset.objects.all():
        if dataset.publishing_authority and dataset.publishing_authority.strip():
            existing_authorities.add(dataset.publishing_authority.strip())
    
    # Create PublishingAuthority objects
    for authority_name in existing_authorities:
        PublishingAuthority.objects.get_or_create(
            name=authority_name,
            defaults={
                'is_active': True,
                'is_default': False
            }
        )
    
    # Create default ISR publishing authority
    isr_authority, created = PublishingAuthority.objects.get_or_create(
        name='ISR',
        defaults={
            'description': 'Institute for Social Research',
            'is_active': True,
            'is_default': True
        }
    )
    
    # If ISR was just created, make it the default
    if created:
        # Ensure only one default
        PublishingAuthority.objects.filter(is_default=True).exclude(id=isr_authority.id).update(is_default=False)


def reverse_populate_publishing_authorities(apps, schema_editor):
    """Reverse the population - delete all PublishingAuthority objects"""
    PublishingAuthority = apps.get_model('datasets', 'PublishingAuthority')
    PublishingAuthority.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0010_create_publishing_authority'),
    ]

    operations = [
        migrations.RunPython(
            populate_publishing_authorities,
            reverse_populate_publishing_authorities
        ),
    ]
