# Generated by Django 5.2.6 on 2025-09-12 12:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Dataset Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('abstract', models.TextField(blank=True, help_text='Short summary of the dataset')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('keywords', models.TextField(blank=True, help_text='Keywords for search')),
                ('file', models.FileField(blank=True, null=True, upload_to='datasets/%Y/%m/%d/')),
                ('file_size', models.BigIntegerField(default=0, help_text='File size in bytes')),
                ('file_format', models.CharField(blank=True, help_text='File format (CSV, JSON, etc.)', max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived'), ('private', 'Private')], default='draft', max_length=20)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('restricted', 'Restricted'), ('private', 'Private')], default='public', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('license', models.CharField(blank=True, max_length=100)),
                ('citation', models.TextField(blank=True, help_text='How to cite this dataset')),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier', max_length=100)),
                ('has_geospatial_data', models.BooleanField(default=False)),
                ('bounding_box', models.CharField(blank=True, help_text='Bounding box coordinates', max_length=100)),
                ('coordinate_system', models.CharField(blank=True, help_text='Coordinate reference system', max_length=50)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('contributors', models.ManyToManyField(blank=True, help_text='Users who contributed to this dataset', related_name='contributed_datasets', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_datasets', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datasets', to='datasets.datasetcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DatasetDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='datasets.dataset')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DatasetVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, help_text='Changes in this version')),
                ('file', models.FileField(upload_to='datasets/versions/%Y/%m/%d/')),
                ('file_size', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_current', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='datasets.dataset')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['status', 'access_level'], name='datasets_da_status_23ad7f_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['category', 'status'], name='datasets_da_categor_be23c0_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['owner', 'status'], name='datasets_da_owner_i_4ddb22_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['created_at'], name='datasets_da_created_545e5b_idx'),
        ),
        migrations.AddIndex(
            model_name='datasetdownload',
            index=models.Index(fields=['dataset', 'downloaded_at'], name='datasets_da_dataset_79f4c8_idx'),
        ),
        migrations.AddIndex(
            model_name='datasetdownload',
            index=models.Index(fields=['user', 'downloaded_at'], name='datasets_da_user_id_c4d953_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datasetversion',
            unique_together={('dataset', 'version_number')},
        ),
    ]
