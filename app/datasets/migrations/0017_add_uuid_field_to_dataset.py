# Generated by Django 5.2.6 on 2025-09-18 17:22

import uuid
from django.db import migrations, models


def generate_uuids_for_datasets(apps, schema_editor):
    """Generate UUIDs for existing datasets"""
    Dataset = apps.get_model('datasets', 'Dataset')
    
    for dataset in Dataset.objects.all():
        if not dataset.uuid:
            dataset.uuid = uuid.uuid4()
            dataset.save(update_fields=['uuid'])


def reverse_generate_uuids(apps, schema_editor):
    """Reverse operation - clear UUIDs"""
    Dataset = apps.get_model('datasets', 'Dataset')
    Dataset.objects.all().update(uuid=None)


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0016_alter_datasetversion_file'),
    ]

    operations = [
        # Step 1: Add UUID field
        migrations.AddField(
            model_name='dataset',
            name='uuid',
            field=models.UUIDField(
                null=True,
                blank=True,
                unique=True,
                verbose_name='UUID',
                help_text='Unique identifier for the dataset'
            ),
        ),
        
        # Step 2: Generate UUIDs for existing datasets
        migrations.RunPython(
            generate_uuids_for_datasets,
            reverse_generate_uuids,
        ),
        
        # Step 3: Make UUID field non-nullable
        migrations.AlterField(
            model_name='dataset',
            name='uuid',
            field=models.UUIDField(
                default=uuid.uuid4,
                unique=True,
                verbose_name='UUID',
                help_text='Unique identifier for the dataset'
            ),
        ),
    ]
